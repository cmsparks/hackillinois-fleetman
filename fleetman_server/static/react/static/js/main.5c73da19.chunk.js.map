{"version":3,"sources":["logo.svg","Views/MapContainer.js","Views/MapView.js","Views/AvgPlot2.js","Views/AlertAssetSummary.js","Views/AlertsView.js","Views/AssetTimeSeries.js","Views/AvgPlot.js","Views/AssetSummary.js","Views/AllSummary.js","Views/AssetView.js","App.js","reportWebVitals.js","index.js"],"names":["MapContainer","this","props","google","maps","LatLngBounds","assetData","className","containerStyle","position","width","height","initialCenter","lat","geoinfo","lng","zoom","data","map","elem","icon","url","anchor","Point","scaledSize","Size","React","Component","GoogleApiWrapper","apiKey","round","x","Math","AvgPlot","e","plot","max","min","total","i","length","avg","console","log","style","display","flexDirection","alignItems","margin","backgroundColor","alignSelf","marginRight","averageVal","key","AlertAssetSummary","asset_id","asset_type","DayView","state","assetDataOne","aid","getAssets","bind","getAssetData","that","fetch","then","response","json","setState","visible","assetList","onClick","AssetSummary","labels","date","datasets","label","borderColor","borderWidth","hoverBackgroundColor","hoverBorderColor","marginLeft","pct_fuel","total_fuel","total_hours","AllSummary","AssetView","onChange","target","value","type","App","visibility","visibilityType","color","handleButton","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5c73da19.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import {Map, InfoWindow, Marker, GoogleApiWrapper} from 'google-maps-react';\nimport React, { Component } from 'react';\n\nexport class MapContainer extends React.Component {\n  render() {\n    var bounds = new this.props.google.maps.LatLngBounds();\n    \n    if(this.props.assetData === null) {\n      return <div></div>;\n    }\n\n    return (\n      <Map\n        className=\"Map SubView\"\n        google={this.props.google}\n        containerStyle={{\n          position: 'relative',\n          width: '60vw',\n          height: '50vh'\n        }}\n        initialCenter={{\n            lat: this.props.assetData.geoinfo.lat,\n            lng: this.props.assetData.geoinfo.lng\n        }}\n        zoom={14}\n      >\n        {this.props.assetData.data.map((elem) => {\n          return <Marker position={{\n            lat: elem.lat,\n            lng: elem.lng\n          }}\n          icon={{\n            url: '/static/react/dot.png',\n            anchor: new this.props.google.maps.Point(4,4),\n            scaledSize: new this.props.google.maps.Size(8,8)\n          }}/>\n        })} \n      </Map>\n    );\n  }\n}\n \nexport default GoogleApiWrapper({\n  apiKey: 'AIzaSyATvGRRH9nWQfuLWudRtg7dPUIRr7U6hfQ'\n})(MapContainer)\n","import React, { Component } from 'react';\nimport MapContainer from './MapContainer'\n\nexport default class MapView extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      assetData: null,\n      aid: null\n    }\n\n    this.getAssets = this.getAssets.bind(this)\n    this.getAssetsAll = this.getAssetsAll.bind(this)\n  }\n\n  getAssetsAll() {\n    let that = this;\n    fetch('fleet/all')\n      .then(response => response.json())\n      .then(data => that.setState({assetData: data}))\n  }\n\n  getAssets() {\n    if(this.state.aid === null || this.state.aid == '') {\n      this.getAssetsAll()\n      return;\n    }\n    let that = this;\n    fetch('fleet/id/'+this.state.aid)\n      .then(response => response.json())\n      .then(data => that.setState({assetData: data}))\n  }\n  \n  render() {\n    if(this.props.visible) {\n      return (\n        <div className=\"FullView\">\n          <div className=\"InputHeader\">\n            <span>Asset ID: </span><input \n              onChange={\n                (e) => this.setState({aid: e.target.value})\n              }\n              value={this.state.aid} \n              type=\"text\"\n            ></input>\n            <button onClick={this.getAssets}>Get Assets</button>\n          </div>\n          <MapContainer assetData={this.state.assetData}/>\n        </div>\n      );\n    }\n    else {\n      return <div></div>;\n    }\n  }\n}\n\n","import React, { Component } from 'react';\n\nfunction round(x) {\n  return Math.round(x * 100)/100\n}\n\nexport default class AvgPlot extends React.Component {\n  render() {\n    let data = this.props.data.map(e => e[this.props.plot])\n    let max = round(Math.max(...data))\n    let min = round(Math.min(...data))\n    let total = 0;\n    for(let i = 0; i < this.props.data.length; i++) {\n      total += this.props.data[i][this.props.plot];\n    }\n    let avg = round(total / this.props.data.length)\n    \n    console.log(data)\n    console.log(max)\n    console.log(min)\n    console.log(avg)\n\n    return (\n      <div>\n        <div style={{\n          display: 'flex',\n          flexDirection: 'row',\n          alignItems: 'center',\n          width: '1000px',\n          margin: '30px 0'\n        }}>\n          <span style={{margin: '15px'}}>Min: {min}</span>\n          <div style={{\n            display: 'flex',\n            flexDirection: 'row',\n            alignItems: 'center',\n            width: '400px',\n            height: '60px',\n            backgroundColor:'rgba(255,99,132,.2)'\n          }}>\n              <span style={{margin: '0 auto'}}><b></b></span>\n            <div style={{display: 'inline-block', alignSelf:'center', height: '100%', width: '2px', backgroundColor: 'black'}}></div>\n              <span style={{margin: '0 15px', marginRight: '100px'}}>Avg: {avg}</span> \n          </div>\n          <span style={{margin: '15px'}}>Max: {max}</span>\n        </div>\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react';\nimport MapContainer from './MapContainer'\nimport AvgPlot from './AvgPlot2'\n\nfunction round(x) {\n  return Math.round(x * 100)/100\n}\n\nfunction averageVal(e, key) {\n    let total = 0;\n    for(let i = 0; i < e.length; i++) {\n      total += e[i][key];\n    }\n    let avg = round(total / e.length)\n  return avg\n}\n\nexport default class AlertAssetSummary extends React.Component {\n  render() {\n    console.log(this.props)\n    if (this.props.assetData === null) {\n      return <div className=\"AssetDetail AllSummary\">\n      <h2>Asset: {this.props.elem.asset_id} - {this.props.elem.asset_type}</h2>\n        <p>Loading...</p>\n        </div>\n    }\n      \n    return (<div className=\"AssetDetail AllSummary\">\n      <h2>Asset: {this.props.elem.asset_id} - {this.props.elem.asset_type}</h2>\n      <h3>Operation Statistics</h3>\n      <p>Average Total Fuel: {averageVal(this.props.assetData.data, \"total_fuel\")}</p>\n      <p>Average Run Time: {averageVal(this.props.assetData.data, \"total_hours\")}</p>\n      <p>Average Fuel Used: {averageVal(this.props.assetData.data, \"fuel_used\")}</p>\n      <p>Operating Latitude: {averageVal(this.props.assetData.data, \"lat\")}</p>\n      <p>Operating Longitude: {averageVal(this.props.assetData.data, \"lng\")}</p>\n      <h3>Asset Location Map</h3>\n      {this.props.assetData === null ? \"Loading\" : <div>\n        \n        <MapContainer assetData={this.props.assetData}/>\n      </div>}\n      <h3>Total Fuel Averages for {this.props.elem.asset_id}</h3>\n      <AvgPlot plot=\"total_fuel\" data={this.props.assetData.data}/>\n      <h3>Total Hours Averages for {this.props.elem.asset_id}</h3>\n      <AvgPlot plot=\"total_hours\" data={this.props.assetData.data}/>\n      <h3>Fuel Used Averages for {this.props.elem.asset_id}</h3>\n      <AvgPlot plot=\"fuel_used\" data={this.props.assetData.data}/>\n    </div>)\n  }\n}\n\n","import React, { Component } from 'react';\nimport AlertAssetSummary from './AlertAssetSummary'\nexport default class DayView extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      assetData: null,\n      assetDataOne: null,\n      aid: null,\n      elem: null\n    }\n\n    this.getAssets = this.getAssets.bind(this)\n    this.getAssetData = this.getAssetData.bind(this)\n    let that = this;\n    fetch('fleet/assets/all')\n      .then(response => response.json())\n      .then(data => that.setState({assetData: data}))\n  }\n\n  getAssets() {\n    let that = this;\n    fetch('fleet/assets/all')\n      .then(response => response.json())\n      .then(data => that.setState({assetData: data}))\n  }\n  \n  getAssetData(aid) {\n    let that = this;\n    fetch('fleet/id/'+aid)\n      .then(response => response.json())\n      .then(data => that.setState({assetDataOne: data}))\n  }\n  \n  render() {\n    if(this.props.visible) {\n      let assetList = <li>Loading all assets...</li>\n      if(this.state.assetData !== null){\n      assetList = this.state.assetData.data.map((elem) => {\n        return (<li>\n                  <button onClick={() => {\n                      this.setState({elem: elem})\n                      this.getAssetData(elem.asset_id)\n                    }\n                  }>\n                    Select\n                  </button>\n                  <b>{elem.asset_id} - {elem.asset_type}</b>\n                </li>)\n      });\n      }\n\n\n      return (\n        <div className=\"FullView\">\n          <div className=\"InputHeader\">\n            <button onClick={this.getAssets}>Refresh</button>\n          </div>\n          <ul className=\"SidebarList\">\n            { assetList }\n            <li>Too many results to show all</li>\n          </ul>\n        {this.state.elem !== null ? <AlertAssetSummary\n              elem={this.state.elem}\n              assetData={this.state.assetDataOne}\n            /> : (<div className=\"AssetDetail AllSummary\">\n      <h2>No item selected</h2>\n      <p>Select an asset id to start, for example: 1032011</p>\n    </div>)}\n        </div>\n      )\n    }\n    else {\n      return <div></div>;\n    }\n  }\n}\n\n","import React, { Component } from 'react';\nimport { Bar } from 'react-chartjs-2'\n\nexport default class AssetSummary extends React.Component {\n  render() {\n    let data = {\n      labels: this.props.data.map(e => e.date),\n      datasets: [\n        {\n          label: this.props.plot,\n          backgroundColor: 'rgba(255,99,132,.2)',\n          borderColor: 'rgba(255,99,132,1)',\n          borderWidth: 1,\n          hoverBackgroundColor: 'rgba(255,99,132,0.4)',\n          hoverBorderColor: 'rgba(255,99,132,1)',\n          data: this.props.data.map(e => e[this.props.plot])\n        }\n      ]\n    }\n    return (<div style={{margin: '60px 0'}}>\n        <Bar \n          data={data}\n        />\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react';\n\nfunction round(x) {\n  return Math.round(x * 100)/100\n}\n\nexport default class AvgPlot extends React.Component {\n  render() {\n    let data = this.props.data.map(e => e[this.props.plot])\n    let max = round(Math.max(...data))\n    let min = round(Math.min(...data))\n    let total = 0;\n    for(let i = 0; i < this.props.data.length; i++) {\n      total += this.props.data[i][this.props.plot];\n    }\n    let avg = round(total / this.props.data.length)\n    \n    console.log(data)\n    console.log(max)\n    console.log(min)\n    console.log(avg)\n    console.log(this.props.elem[this.props.plot])\n\n    return (\n      <div>\n      <div style={{\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n        width: '1000px',\n        margin: '30px 0'\n      }}>\n        <span style={{margin: '15px'}}>Min: {min}</span>\n        <div style={{\n          display: 'flex',\n          flexDirection: 'row',\n          alignItems: 'center',\n          width: '400px',\n          height: '60px',\n          backgroundColor:'rgba(255,99,132,.2)'\n        }}>\n          {avg <= this.props.elem[this.props.plot] ?\n            <span style={{margin: '0 15px', marginLeft: '100px'}}>Avg: {avg}</span> : \n            <span style={{margin: '0 auto'}}><b>Asset: {round(this.props.elem[this.props.plot])}</b></span>}\n\n          <div style={{display: 'inline-block', alignSelf:'center', height: '100%', width: '2px', backgroundColor: 'black'}}></div>\n\n          {avg > this.props.elem[this.props.plot] ? \n            <span style={{margin: '0 15px', marginRight: '100px'}}>Avg: {avg}</span> : \n            <span style={{margin: '0 auto'}}><b>Asset: {round(this.props.elem[this.props.plot])}</b></span>}\n        </div>\n        <span style={{margin: '15px'}}>Max: {max}</span>\n      </div>\n      <p>For the day of {this.props.elem.date}, asset-{this.props.elem.asset_id} had a {avg > this.props.elem[this.props.plot] ? 'lower' : 'higher'} than average {this.props.plot} data value. </p>\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react';\nimport AssetTimeSeries from './AssetTimeSeries'\nimport AvgPlot from './AvgPlot'\n\nfunction round(x) {\n  return Math.round(x * 100)/100\n}\n\nexport default class AssetSummary extends React.Component {\n  render() {\n    return (<div className=\"AssetDetail AssetSummary\">\n      <h2>Asset: {this.props.elem.asset_id} - {this.props.elem.asset_type}</h2>\n      <h3>Operation Statistics</h3>\n      <p>Date: {this.props.elem.date}</p>\n      <p>Fuel Remaining: {round(this.props.elem.pct_fuel * 0.01 * this.props.elem.total_fuel)}/{this.props.elem.total_fuel} ({this.props.elem.pct_fuel}%)</p>\n      <p>Hours Out: {this.props.elem.total_hours}</p>\n      <p>Latitude: {this.props.elem.lat}</p>\n      <p>Longitude: {this.props.elem.lng}</p>\n      <h3>Total Hours Graph and Averages for {this.props.elem.date}</h3>\n      <AvgPlot plot=\"total_hours\" data={this.props.assetData.data} elem={this.props.elem}/>\n      <AssetTimeSeries plot=\"total_hours\" data={this.props.assetData.data} elem={this.props.elem} />\n      <h3>Total Fuel Graph and Averages for {this.props.elem.date}</h3>\n      <AvgPlot plot=\"total_fuel\" data={this.props.assetData.data} elem={this.props.elem}/>\n      <AssetTimeSeries plot=\"total_fuel\" data={this.props.assetData.data} elem={this.props.elem} />\n      <h3>Fuel Used Graph and Averages for {this.props.elem.date}</h3>\n      <AvgPlot plot=\"fuel_used\" data={this.props.assetData.data} elem={this.props.elem}/>\n      <AssetTimeSeries plot=\"fuel_used\" data={this.props.assetData.data} elem={this.props.elem} />\n    </div>)\n  }\n}\n\n","import React, { Component } from 'react';\n\nexport default class AllSummary extends React.Component {\n  render() {\n    return (<div className=\"AssetDetail AllSummary\">\n      <h2>No item selected</h2>\n      <p>Select an asset id to start, for example: 1032011</p>\n    </div>)\n  }\n}\n\n","import React, { Component } from 'react';\nimport AssetSummary from './AssetSummary'\nimport AllSummary from './AllSummary'\n\nexport default class AssetView extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      assetData: null,\n      aid: null,\n      date: 'all',\n      elem: null\n    }\n\n    this.getAssets = this.getAssets.bind(this)\n  }\n\n  getAssets() {\n    let that = this;\n    fetch('fleet/id/'+this.state.aid)\n      .then(response => response.json())\n      .then(data => that.setState({assetData: data}))\n  }\n  \n  render() {\n    if(this.props.visible) {\n      let assetList = <li>Search for an Asset ID</li>\n      if(this.state.assetData !== null) {\n        assetList = this.state.assetData.data.map((elem) => {\n          return (<li>\n                    <button onClick={() => this.setState({date: elem.date, elem: elem})}>\n                      Select\n                    </button>\n                    <b>{elem.date}</b>\n                  </li>)\n        });\n      }\n\n\n      return (\n        <div className=\"FullView\">\n          <div className=\"InputHeader\">\n            <span>Asset ID: </span><input \n              onChange={\n                (e) => this.setState({aid: e.target.value})\n              }\n              value={this.state.aid} \n              type=\"text\"\n            ></input>\n            <button onClick={this.getAssets}>Get Assets</button>\n          </div>\n          <ul className=\"SidebarList\">\n            {/*<li>\n              <b>Overview</b>\n              <button onClick={() => this.setState({date: 'all', elem: null})}>\n                Select\n              </button>\n            </li>*/}\n            { assetList }\n          </ul>\n          { this.state.date !== 'all' ?\n            <AssetSummary\n              date={this.state.date}\n              elem={this.state.elem}\n              assetData={this.state.assetData}\n            /> :\n            <AllSummary\n              date={this.state.date}\n              assetData={this.state.assetData}\n            />\n          }\n        </div>\n      )\n    }\n    else {\n      return <div></div>;\n    }\n  }\n}\n\n","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport MapView from './Views/MapView';\nimport AlertsView from './Views/AlertsView';\nimport AssetView from './Views/AssetView';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      visibility: \"alerts\"\n    }\n  }\n\n  handleButton(visibilityType) {\n    this.setState({visibility: visibilityType})\n  }\n\n  render() {\n\n    return (\n      <div>\n        <header className=\"TitleBar\">\n          <h1>Fleetman</h1>\n        </header>\n        <AssetView visible={this.state.visibility === \"asset\"}/>\n        <AlertsView visible={this.state.visibility === \"alerts\"}/>\n        <div className=\"ViewSelector\">\n          <button \n            style={{\n              color: this.state.visibility === 'alerts' ? 'rgb(255,99,132)' : 'black'\n            }}\n          onClick={() => this.handleButton(\"alerts\")}>Assets View</button>\n          <button \n            style={{\n              color: this.state.visibility === 'asset' ? 'rgb(255,99,132)' : 'black'\n            }}\n          onClick={() => this.handleButton(\"asset\")}>Day View</button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}